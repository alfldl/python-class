# 시퀀스 자료형의 지원 연산  인덱싱
print ("---------------------------")
s = 'bacdef'
l = [100, 200, 300]
print ("s[0]                     "   , s[0] )
print ("s[1]                     "   , s[1] )
print ("s[-1]                    "   , s[-1])

print ("l[1]                     "   , l[1] )
l[1] = 900 
print ("l[1]                     "   , l[1])
#ㅣ[100] → list l에 존재하지 않음 → error 발생
# print  "l[100]                     "   ,l[100]

# 시퀀스 자료형의 지원 연산  슬라이싱
print ("---------------------------")
#    0123456
s = 'abcdef'
L = [100, 200, 300] 
print ("s[1:3]           "   ,s[1:3] )
print ("s[1:]            "   ,s[1:] )
print ("s[:]             "   ,s[:] )
print ("s[-100:100]      "   ,s[-100:100]) # -100 →처음 값, 100 →마지막 값
print ("s[-30:100]       "   ,s[-30:100]) # -100 →처음 값, 100 →마지막 값
print ("s[-2:100]        "   ,s[-2:100]) # -100 →처음 값, 100 →마지막 값
print ("s[-1:100]        "   ,s[-1:100]) # -100 →처음 값, 100 →마지막 값
print 
print ("L[:-1]           "   ,L[:-1] )# L[:2] 와 동일 끝 인덱스 → 300 → ‘2’에 해당
print ("L[:2]            "   ,L[:2])


# 시퀀스 자료형의 지원 연산  확장 슬라이싱
# L[start:end:step]: 인덱싱되어지는 각 원소들 사이의 거리가 인덱스 기준으로 step 만큼 떨어짐
print ("---------------------------")
s = 'abcd' 
print ("s[::2]           "   , s[::2]) #step:2 - 각 원소들 사이의 거리가 인덱스 기준으로 2가 됨
print ("s[::-1]          "   , s[::-1]) #step:-1 - 왼쪽 방향으로 1칸씩

# 시퀀스 자료형의 지원 연산  연결하기
print ("---------------------------")
s = 'abc' + 'def'        # 시퀀스 + 시퀀스 → 2개의 시퀀스를 연결해서 하나로
print ("'abc' + 'def'            "   , s )

L = [1,2,3] + [4,5,6]    # 리스트 + 리스트 → 하나의 리스트로 반환
print ("[1,2,3] + [4,5,6]        "   , L)

# 시퀀스 자료형의 지원 연산  -> 반복하기
print ("---------------------------")
s = 'abc' 
print ("s * 4            "   , s * 4  ) # 반복하기: ‘곱하기’ 연산을 보는 것 , s * 4= s의 내용을 4번 반복하여 반환
L = [1,2,3] 
print ("[1,2,3] * 2      "   , L * 2 )  #

# 시퀀스 자료형의 지원 연산  -> 멤버십 테스트
print ("---------------------------")
s = 'abcde' 
print ("'c' in s            "   , 'c' in s )
 
t = (1,2,3,4,5) 
print  ("2 in t             "   , 2 in t )
print  ("10 in t            "   , 10 in t )
print  ("10 not in t        "   , 10 not in t )

print ("'ab' in 'abcd'        "   , 'ab' in 'abcd' )
print ("'ad' in 'abcd'        "   , 'ad' in 'abcd' )
print ("' ' in 'abcd'         "   ,  ' ' in 'abcd' )
print (" ' ' in 'abcd '       "   ,  ' ' in 'abcd ')

# 시퀀스 자료형의 지원 연산  ->길이 정보
# 문자열, 리스트, 튜플 모두 len 함수의 인자가 될 수 있음]
print ("---------------------------")
s = 'abcde' 
l = [1,2,3] 
t = (1, 2, 3, 4) 
print ("len(s)        "   , len(s) )
print ("len(l)        "   , len(l) )
print ("len(t)        "   , len(t) )

# 시퀀스 자료형의 지원 연산  -> for~in 문컨테이너 종류: 시퀀스 자료형, 시퀀스 자료형이 아닌 것
# 시퀀스 자료형 = 문자열, 리스트, 튜플
# 시퀀스 자료형이 아닌 것 = 사전문자열, 리스트, 튜플 모두 len 함수의 인자가 될 수 있음]
print ("---------------------------")
for c in 'abcd': 
    print (c,)
